{
  "SerializedFilePath": "/Users/Adriana.Pena/codingDojo/soloProject1/hothobby/obj/Debug/net6.0/project.razor.json",
  "FilePath": "/Users/Adriana.Pena/codingDojo/soloProject1/hothobby/hothobby.csproj",
  "Configuration": {
    "ConfigurationName": "MVC-3.0",
    "LanguageVersion": "6.0",
    "Extensions": [
      {
        "ExtensionName": "MVC-3.0"
      }
    ]
  },
  "ProjectWorkspaceState": {
    "TagHelpers": [
      {
        "HashCode": -1667846259,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView"
        }
      },
      {
        "HashCode": -1012819248,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2019918761,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1467893013,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1752136149,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeRouteView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 482611019,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1103127303,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Policy",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Roles",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView"
        }
      },
      {
        "HashCode": -1699225275,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Policy",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Roles",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -91275296,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1095878852,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1875518092,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 693965754,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1529261971,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 847670387,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1407102070,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 267840039,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 293274789,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingAuthenticationState"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState"
        }
      },
      {
        "HashCode": 332838773,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 95482484,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingAuthenticationState"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1981262323,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1963830351,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1080152935,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -708985434,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -636939058,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 492968766,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DynamicComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "DynamicComponent"
        }
      },
      {
        "HashCode": -606596526,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.DynamicComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "DynamicComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 41098569,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "LayoutView"
        }
      },
      {
        "HashCode": 1461766066,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "LayoutView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -151588125,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "LayoutView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -378480815,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "LayoutView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 478393957,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "RouteView"
        }
      },
      {
        "HashCode": 783000331,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "RouteView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1231107967,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly",
              "Common.GloballyQualifiedTypeName": "global::System.Reflection.Assembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreferExactMatches",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PreferExactMatches",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router"
        }
      },
      {
        "HashCode": -1120310558,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly",
              "Common.GloballyQualifiedTypeName": "global::System.Reflection.Assembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreferExactMatches",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PreferExactMatches",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1384269332,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -77034260,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2019705392,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1518550353,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1785705779,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1610671516,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 363273730,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "DataAnnotationsValidator"
        }
      },
      {
        "HashCode": 51097015,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "DataAnnotationsValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1927142116,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "EditForm"
        }
      },
      {
        "HashCode": -2102129447,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "EditForm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 979292396,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "EditForm",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1713259730,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "EditForm",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1744946590,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputCheckbox"
        }
      },
      {
        "HashCode": -180810291,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 151976725,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.InputDateType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputDate",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1662970884,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.InputDateType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputDate",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 940053183,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputFile"
        }
      },
      {
        "HashCode": 2029481599,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputFile",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -844251356,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputNumber",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -895904984,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputNumber",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 259102349,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadio",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1546656366,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadio",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2019813243,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -162280604,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1090413046,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 6621800,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1499913039,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputSelect",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1596926908,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputSelect",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1064682271,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputSelect",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1212199173,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputSelect",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -399396136,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputText"
        }
      },
      {
        "HashCode": 660792355,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1773624983,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputTextArea"
        }
      },
      {
        "HashCode": -1798161311,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1583266928,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "ValidationMessage",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -618018126,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "ValidationMessage",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 991292698,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "ValidationSummary"
        }
      },
      {
        "HashCode": 1332084624,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "ValidationSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -68792252,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FocusOnNavigate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selector",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selector",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "FocusOnNavigate"
        }
      },
      {
        "HashCode": -1838279506,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selector",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selector",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "FocusOnNavigate",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -355077953,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "NavLink"
        }
      },
      {
        "HashCode": 1694653432,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "NavLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1611778382,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "NavLink",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1372379226,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "NavLink",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 275283894,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeadContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.Globall